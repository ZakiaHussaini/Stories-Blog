{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\n// ... other imports\n\nfunction PostsPage(_ref) {\n  _s();\n  let {\n    message,\n    filter = \"\"\n  } = _ref;\n  const [posts, setPosts] = useState({\n    results: []\n  });\n  const [categories, setCategories] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [selectedCategoryIndex, setSelectedCategoryIndex] = useState(0);\n  const currentUser = useCurrentUser();\n  const isMountedRef = useRef(true);\n  const handleCategoryClick = async categoryId => {\n    setSelectedCategory(categoryId);\n    setSelectedCategoryIndex(categoryId ? 1 : 0);\n    try {\n      let url = \"/posts/\";\n      if (categoryId) {\n        url = `/categories/${categoryId}/posts/`;\n      }\n      const {\n        data\n      } = await axiosReq.get(`${url}?${filter}search=${query}`);\n      if (isMountedRef.current) {\n        setPosts(data);\n        setHasLoaded(true);\n      }\n      console.log(categoryId);\n    } catch (err) {\n      // Handle the error\n    }\n  };\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let url = \"/posts/\";\n        if (selectedCategory) {\n          url = `/categories/${selectedCategory}/posts/`;\n        }\n        const {\n          data\n        } = await axiosReq.get(`${url}?${filter}search=${query}`);\n        if (isMountedRef.current) {\n          setPosts(data);\n          setHasLoaded(true);\n        }\n      } catch (err) {\n        // Handle the error\n      }\n    };\n    const fetchCategories = async () => {\n      try {\n        const {\n          data\n        } = await axiosReq.get(\"/categories/\");\n        if (isMountedRef.current) {\n          setCategories(data.results);\n        }\n      } catch (err) {\n        // Handle the error\n      }\n    };\n    setHasLoaded(false);\n    const timer = setTimeout(() => {\n      fetchPosts();\n      fetchCategories();\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      isMountedRef.current = false;\n    };\n  }, [filter, query, selectedCategory, pathname, currentUser]);\n\n  // ... rest of the component code\n}\n_s(PostsPage, \"Z/SnAwuarDpsPqIaO84zywKRNvw=\", true);\n_c = PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","PostsPage","_ref","_s","message","filter","posts","setPosts","results","categories","setCategories","hasLoaded","setHasLoaded","pathname","useLocation","selectedCategory","setSelectedCategory","query","setQuery","selectedCategoryIndex","setSelectedCategoryIndex","currentUser","useCurrentUser","isMountedRef","handleCategoryClick","categoryId","url","data","axiosReq","get","current","console","log","err","fetchPosts","fetchCategories","timer","setTimeout","clearTimeout","_c","$RefreshReg$"],"sources":["C:/Users/zakia.hussaini/Documents/Stories-Blog-1/frontends/src/pages/posts/PostsPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n// ... other imports\r\n\r\nfunction PostsPage({ message, filter = \"\" }) {\r\n  const [posts, setPosts] = useState({ results: [] });\r\n  const [categories, setCategories] = useState([]);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const { pathname } = useLocation();\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [selectedCategoryIndex, setSelectedCategoryIndex] = useState(0);\r\n  const currentUser = useCurrentUser();\r\n  const isMountedRef = useRef(true);\r\n\r\n  const handleCategoryClick = async (categoryId) => {\r\n    setSelectedCategory(categoryId);\r\n    setSelectedCategoryIndex(categoryId ? 1 : 0);\r\n\r\n    try {\r\n      let url = \"/posts/\";\r\n      if (categoryId) {\r\n        url = `/categories/${categoryId}/posts/`;\r\n      }\r\n      const { data } = await axiosReq.get(`${url}?${filter}search=${query}`);\r\n      if (isMountedRef.current) {\r\n        setPosts(data);\r\n        setHasLoaded(true);\r\n      }\r\n      console.log(categoryId);\r\n    } catch (err) {\r\n      // Handle the error\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        let url = \"/posts/\";\r\n        if (selectedCategory) {\r\n          url = `/categories/${selectedCategory}/posts/`;\r\n        }\r\n        const { data } = await axiosReq.get(`${url}?${filter}search=${query}`);\r\n        if (isMountedRef.current) {\r\n          setPosts(data);\r\n          setHasLoaded(true);\r\n        }\r\n      } catch (err) {\r\n        // Handle the error\r\n      }\r\n    };\r\n\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const { data } = await axiosReq.get(\"/categories/\");\r\n        if (isMountedRef.current) {\r\n          setCategories(data.results);\r\n        }\r\n      } catch (err) {\r\n        // Handle the error\r\n      }\r\n    };\r\n\r\n    setHasLoaded(false);\r\n    const timer = setTimeout(() => {\r\n      fetchPosts();\r\n      fetchCategories();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      isMountedRef.current = false;\r\n    };\r\n  }, [filter, query, selectedCategory, pathname, currentUser]);\r\n\r\n  // ... rest of the component code\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}