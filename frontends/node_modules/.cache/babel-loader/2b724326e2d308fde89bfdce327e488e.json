{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zakia.hussaini\\\\Documents\\\\Stories-Blog-1\\\\frontends\\\\src\\\\pages\\\\posts\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"../../styles/Post.module.css\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { Card, Media, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport { axiosReq, axiosRes } from \"../../api/axiosDefaults\";\nimport { MoreDropdown } from '../../components/MoreDropdown';\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = props => {\n  _s();\n  var _currentUser;\n  // ... (your existing code)\n\n  const [saved, setSaved] = useState(false);\n  const [message, setMessage] = useState('');\n  const user_id = (_currentUser = currentUser) === null || _currentUser === void 0 ? void 0 : _currentUser.pk;\n  useEffect(() => {\n    // Check if the post is saved when the component mounts\n    const checkSavedStatus = async () => {\n      try {\n        const response = await axiosReq.get(`/saved-posts/check/${user_id}/${post.id}/`);\n        setSaved(response.data.saved);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    checkSavedStatus();\n  }, [user_id, post.id]);\n  const savePost = async () => {\n    try {\n      if (saved) {\n        // If the post is saved, perform unsave operation\n        await axiosReq.delete(`/saved-posts/unsave/${user_id}/${post.id}/`);\n      } else {\n        // If the post is not saved, perform save operation\n        await axiosReq.post(`/saved-posts/save/${user_id}/${post.id}/`);\n      }\n\n      // Update the saved state\n      setSaved(!saved);\n\n      // Display a message\n      setMessage(saved ? 'Post unsaved!' : 'Post saved!');\n\n      // Clear the message after 2 seconds\n      setTimeout(() => {\n        setMessage('');\n      }, 2000);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // ... (rest of your existing code)\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.Post,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.PostBar,\n      children: [saved ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-save\",\n          onClick: savePost,\n          style: {\n            color: 'gray'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), \"unSave\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-save\",\n          onClick: savePost,\n          style: {\n            color: 'outline gray'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \"Save\"]\n      }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"s5AyUfdHlT7MaQ72VABygdP9e+Y=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","styles","useCurrentUser","Card","Media","OverlayTrigger","Tooltip","Link","Avatar","axiosReq","axiosRes","MoreDropdown","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","props","_s","_currentUser","saved","setSaved","message","setMessage","user_id","currentUser","pk","checkSavedStatus","response","get","post","id","data","error","console","savePost","delete","setTimeout","className","children","PostBar","onClick","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zakia.hussaini/Documents/Stories-Blog-1/frontends/src/pages/posts/Post.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../../styles/Post.module.css\";\r\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\r\nimport { Card, Media, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport { axiosReq, axiosRes } from \"../../api/axiosDefaults\";\r\nimport { MoreDropdown } from '../../components/MoreDropdown'\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst Post = (props) => {\r\n  // ... (your existing code)\r\n\r\n  const [saved, setSaved] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const user_id = currentUser?.pk;\r\n\r\n  useEffect(() => {\r\n    // Check if the post is saved when the component mounts\r\n    const checkSavedStatus = async () => {\r\n      try {\r\n        const response = await axiosReq.get(`/saved-posts/check/${user_id}/${post.id}/`);\r\n        setSaved(response.data.saved);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    checkSavedStatus();\r\n  }, [user_id, post.id]);\r\n\r\n  const savePost = async () => {\r\n    try {\r\n      if (saved) {\r\n        // If the post is saved, perform unsave operation\r\n        await axiosReq.delete(`/saved-posts/unsave/${user_id}/${post.id}/`);\r\n      } else {\r\n        // If the post is not saved, perform save operation\r\n        await axiosReq.post(`/saved-posts/save/${user_id}/${post.id}/`);\r\n      }\r\n\r\n      // Update the saved state\r\n      setSaved(!saved);\r\n\r\n      // Display a message\r\n      setMessage(saved ? 'Post unsaved!' : 'Post saved!');\r\n\r\n      // Clear the message after 2 seconds\r\n      setTimeout(() => {\r\n        setMessage('');\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // ... (rest of your existing code)\r\n\r\n  return (\r\n    <Card className={styles.Post}>\r\n      {/* ... (your existing code) */}\r\n      <div className={styles.PostBar}>\r\n        {/* ... (your existing code) */}\r\n        {saved ? (\r\n          <>\r\n            <i className=\"fas fa-save\" onClick={savePost} style={{ color: 'gray' }}></i>\r\n            unSave\r\n          </>\r\n        ) : (\r\n          <>\r\n            <i className=\"fas fa-save\" onClick={savePost} style={{ color: 'outline gray' }}></i>\r\n            Save\r\n          </>\r\n        )}\r\n        {message && <p>{message}</p>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,cAAc,QAAQ,mCAAmC;AAClE,SAASC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAEC,OAAO,QAAQ,iBAAiB;AACtE,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,yBAAyB;AAC5D,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,UAAU,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAAA,IAAAC,YAAA;EACtB;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM0B,OAAO,IAAAL,YAAA,GAAGM,WAAW,cAAAN,YAAA,uBAAXA,YAAA,CAAaO,EAAE;EAE/B3B,SAAS,CAAC,MAAM;IACd;IACA,MAAM4B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,QAAQ,CAACqB,GAAG,CAAE,sBAAqBL,OAAQ,IAAGM,IAAI,CAACC,EAAG,GAAE,CAAC;QAChFV,QAAQ,CAACO,QAAQ,CAACI,IAAI,CAACZ,KAAK,CAAC;MAC/B,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDN,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACH,OAAO,EAAEM,IAAI,CAACC,EAAE,CAAC,CAAC;EAEtB,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,IAAIf,KAAK,EAAE;QACT;QACA,MAAMZ,QAAQ,CAAC4B,MAAM,CAAE,uBAAsBZ,OAAQ,IAAGM,IAAI,CAACC,EAAG,GAAE,CAAC;MACrE,CAAC,MAAM;QACL;QACA,MAAMvB,QAAQ,CAACsB,IAAI,CAAE,qBAAoBN,OAAQ,IAAGM,IAAI,CAACC,EAAG,GAAE,CAAC;MACjE;;MAEA;MACAV,QAAQ,CAAC,CAACD,KAAK,CAAC;;MAEhB;MACAG,UAAU,CAACH,KAAK,GAAG,eAAe,GAAG,aAAa,CAAC;;MAEnD;MACAiB,UAAU,CAAC,MAAM;QACfd,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;;EAEA,oBACEpB,OAAA,CAACX,IAAI;IAACoC,SAAS,EAAEtC,MAAM,CAACgB,IAAK;IAAAuB,QAAA,eAE3B1B,OAAA;MAAKyB,SAAS,EAAEtC,MAAM,CAACwC,OAAQ;MAAAD,QAAA,GAE5BnB,KAAK,gBACJP,OAAA,CAAAE,SAAA;QAAAwB,QAAA,gBACE1B,OAAA;UAAGyB,SAAS,EAAC,aAAa;UAACG,OAAO,EAAEN,QAAS;UAACO,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,UAE9E;MAAA,gBAAG,gBAEHlC,OAAA,CAAAE,SAAA;QAAAwB,QAAA,gBACE1B,OAAA;UAAGyB,SAAS,EAAC,aAAa;UAACG,OAAO,EAAEN,QAAS;UAACO,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAe;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,QAEtF;MAAA,gBACD,EACAzB,OAAO,iBAAIT,OAAA;QAAA0B,QAAA,EAAIjB;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC7B,EAAA,CApEIF,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAsEV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}